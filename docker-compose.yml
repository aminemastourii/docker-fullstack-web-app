version: '3.8'

services:

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    depends_on:
      - api
    networks:
      - frontend
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules  

  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "8080:80"
    depends_on:
      - api
      - client  
    networks:
      - frontend
      - backend  

  api:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - "8081:5000"         
    volumes:
      - ./server:/app
      - /app/node_modules
    environment:
       DB_HOST: pg
       DB_USER: amine
       DB_PASSWORD: mastouri
       DB_NAME: my_db
       REDIS_HOST: redis
       REDIS_PORT: 6379
       
    depends_on:
      - redis
      - pg
    networks:
      - backend  

  redis:
    image: redis:latest
    restart: always
    networks:
      - backend  

  pg:
    image: postgres:15
    restart: always
    environment:
       POSTGRES_USER: amine
       POSTGRES_PASSWORD: mastouri
       POSTGRES_DB: my_db
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend  

  worker:
    build: 
      context: ./worker
      dockerfile: Dockerfile.dev
    depends_on:
      - redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - backend
    volumes:
      - /app/node_modules
      - ./worker:/app  

networks:
  backend:
  frontend:

volumes:
  pg_data:  
